server {
    listen 80;
    server_name dladutsko.ru www.dladutsko.ru;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name dladutsko.ru www.dladutsko.ru;

    ssl_certificate /etc/letsencrypt/live/dladutsko.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dladutsko.ru/privkey.pem;

    # üåê –ü—Ä–æ—Ç–æ–∫–æ–ª—ã
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # üîê –®–∏—Ñ—Ä—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è TLSv1.2)
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';

    # üíæ –°–µ—Å—Å–∏–∏
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    # üîó OCSP Stapling (—É—Å–∫–æ—Ä—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞)
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;

    # üöß HSTS (–≤–∫–ª—é—á–∞—Ç—å –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!)
    # –î–∞—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∏—è: 2025-03-26
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # üîÅ –ü—Ä–æ–∫—Å–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –≤–µ–±—Ö—É–∫—É –∏–ª–∏ –¥—Ä—É–≥–æ–º—É —Å–µ—Ä–≤–∏—Å—É
    location /github-webhook {
        allow 192.30.252.0/22;
        allow 185.199.108.0/22;
        allow 140.82.112.0/20;
        allow 143.55.64.0/20;
        deny all;

        proxy_pass http://172.17.0.1:9000/hooks/deploy;
        proxy_set_header Host $host;
    }

    # üîÑ –ü—Ä–æ–∫—Å–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –±–æ—Ç—É
    location /health {
        proxy_pass http://telegram-bot:8080/actuator/health;
        proxy_set_header Host $host;
    }

    # üì¶ –°—Ç–∞—Ç–∏–∫–∞
    location / {
        root /usr/share/nginx/html;
        index index.html;
    }

    location = /favicon.ico {
        root /usr/share/nginx/html;
        access_log off;
        log_not_found off;
    }

    location = /version {
        alias /etc/nginx/VERSION;
        default_type text/plain;
        add_header Cache-Control "no-cache";
    }

    location = /status {
        alias /etc/nginx/status.json;
        default_type application/json;
        add_header Cache-Control "no-cache";
    }

    location = /deploy {
        alias /var/log/nginx/deploy.log;
        default_type text/plain;
        add_header Cache-Control "no-cache";
    }

    # üö´ –ó–∞–ø—Ä–µ—Ç –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ —Å–∫—Ä—ã—Ç—ã–º —Ñ–∞–π–ª–∞–º
    location ~ /\.(?!well-known) {
        deny all;
    }

#     # ü§ñ –ó–∞—â–∏—Ç–∞ –æ—Ç –±–æ—Ç–æ–≤
#     location = /robots.txt {
#         root /etc/nginx/conf.d;
#         access_log off;
#         log_not_found off;
#     }
}
