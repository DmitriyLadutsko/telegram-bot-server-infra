#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Docker –∏ Docker Compose
# - –°–æ–∑–¥–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è deploy –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –≥—Ä—É–ø–ø—ã sudo –∏ docker
# - –ö–æ–ø–∏—Ä—É–µ—Ç SSH-–∫–ª—é—á–∏ –æ—Ç root –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è deploy
# - –°–æ–∑–¥–∞—ë—Ç —Ä–∞–±–æ—á—É—é –ø–∞–ø–∫—É /home/deploy/app
# - –û—Ç–∫–ª—é—á–∞–µ—Ç root-–¥–æ—Å—Ç—É–ø –ø–æ SSH (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

# chmod +x bootstrap.sh
# ./bootstrap.sh

set -e

echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker, –µ—Å–ª–∏ –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v docker >/dev/null 2>&1; then
  echo "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
  apt install -y ca-certificates curl gnupg lsb-release

  install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
    | gpg --dearmor -o /etc/apt/keyrings/docker.gpg

  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
    https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
    > /etc/apt/sources.list.d/docker.list

  apt update
  apt install -y docker-ce docker-ce-cli containerd.io
else
  echo "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose, –µ—Å–ª–∏ –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v docker-compose >/dev/null 2>&1; then
  echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
  curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 \
    -o /usr/local/bin/docker-compose
  chmod +x /usr/local/bin/docker-compose
else
  echo "‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –µ—Å—Ç—å –≥—Ä—É–ø–ø–∞ docker
if ! getent group docker > /dev/null 2>&1; then
  echo "üë• –°–æ–∑–¥–∞—ë–º –≥—Ä—É–ø–ø—É 'docker'..."
  groupadd docker
else
  echo "‚úÖ –ì—Ä—É–ø–ø–∞ 'docker' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è deploy
if id "deploy" >/dev/null 2>&1; then
  echo "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'deploy' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
  echo "üë§ –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'deploy'..."
  adduser deploy --disabled-password --gecos ""
  echo "‚ûï –î–æ–±–∞–≤–ª—è–µ–º deploy –≤ –≥—Ä—É–ø–ø—ã sudo –∏ docker..."
  usermod -aG sudo deploy
  usermod -aG docker deploy

  echo "üîê –ö–æ–ø–∏—Ä—É–µ–º SSH-–∫–ª—é—á–∏ –æ—Ç root..."
  mkdir -p /home/deploy/.ssh
  cp /root/.ssh/authorized_keys /home/deploy/.ssh/
  chown -R deploy:deploy /home/deploy/.ssh
  chmod 700 /home/deploy/.ssh
  chmod 600 /home/deploy/.ssh/authorized_keys
fi

# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–Ω –≤ –≥—Ä—É–ø–ø–µ docker
if id -nG deploy | grep -qw docker; then
  echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'deploy' —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ docker"
else
  echo "‚ûï –î–æ–±–∞–≤–ª—è–µ–º deploy –≤ –≥—Ä—É–ø–ø—É docker..."
  usermod -aG docker deploy
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –ø–∞–ø–∫–∏
if [ ! -d /home/deploy/app ]; then
  echo "üìÅ –°–æ–∑–¥–∞—ë–º —Ä–∞–±–æ—á—É—é –ø–∞–ø–∫—É /home/deploy/app"
  mkdir -p /home/deploy/app
  chown -R deploy:deploy /home/deploy/app
else
  echo "‚úÖ –ü–∞–ø–∫–∞ /home/deploy/app —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

read -p -r "‚ùì –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å GitHub webhook listener —Å–µ–π—á–∞—Å? (y/N): " setup_webhook
if [[ "$setup_webhook" =~ ^[Yy]$ ]]; then
  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
  if ! command -v webhook >/dev/null 2>&1; then
    echo "üì° –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook..."
    apt install -y webhook
  else
    echo "‚úÖ webhook —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  fi

  # üìÅ –ü—É—Ç–∏
  APP_DIR="/home/deploy/app"
  HOOKS_DIR="$APP_DIR/webhook"
  LOG_DIR="$APP_DIR/logs"

  mkdir -p "$LOG_DIR"
  chown -R deploy:deploy "$LOG_DIR"

  # üîê –°–µ–∫—Ä–µ—Ç
  read -p "üîê –í–≤–µ–¥–∏ GitHub webhook —Å–µ–∫—Ä–µ—Ç: " input_secret
  export WEBHOOK_SECRET="$input_secret"

  echo "üõ† –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º hooks.json –∏–∑ —à–∞–±–ª–æ–Ω–∞..."
  su - deploy -c "envsubst < $HOOKS_DIR/hooks.json.tpl > $HOOKS_DIR/hooks.json"

  # systemd unit
  echo "üì¶ –°–æ–∑–¥–∞—ë–º systemd unit –¥–ª—è webhook..."
  cat <<EOF | tee /etc/systemd/system/webhook.service > /dev/null
[Unit]
Description=Webhook Listener
After=network.target

[Service]
Type=simple
User=deploy
WorkingDirectory=$HOOKS_DIR
ExecStart=/usr/bin/webhook -hooks $HOOKS_DIR/hooks.json -port 9000 -verbose
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

  systemctl daemon-reexec
  systemctl daemon-reload
  systemctl enable webhook
  systemctl restart webhook

  echo "‚úÖ Webhook listener –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
else
  echo "‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –æ—Ç–ª–æ–∂–µ–Ω–∞. –¢—ã –º–æ–∂–µ—à—å –∑–∞–ø—É—Å—Ç–∏—Ç—å setup –ø–æ–∑–∂–µ –≤—Ä—É—á–Ω—É—é."
fi

# –û—Ç–∫–ª—é—á–∏—Ç—å root-–¥–æ—Å—Ç—É–ø (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "‚ùì –û—Ç–∫–ª—é—á–∏—Ç—å root-–¥–æ—Å—Ç—É–ø –ø–æ SSH? (y/N): " disable_root
if [[ "$disable_root" =~ ^[Yy]$ ]]; then
  sed -i 's/^#*PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config
  systemctl restart ssh
  echo "üîí Root-–¥–æ—Å—Ç—É–ø –ø–æ SSH –æ—Ç–∫–ª—é—á—ë–Ω."
else
  echo "‚ö†Ô∏è Root-–¥–æ—Å—Ç—É–ø –æ—Å—Ç–∞–ª—Å—è –≤–∫–ª—é—á—ë–Ω."
fi

echo "üéâ –ì–æ—Ç–æ–≤–æ! –û–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ. –ü–µ—Ä–µ–∑–∞–π–¥–∏ –≤ SSH –∫–∞–∫ deploy."
