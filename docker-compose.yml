services:
  bot1:
    image: ${BOT1_DOCKER_IMAGE}:latest
    container_name: ${BOT1_REPOSITORY_NAME}-bot1
    restart: unless-stopped
    env_file:
      - ./bots/bot1/.env
    volumes:
      - ./bots/bot1/logs:/app/logs
    networks:
      - botnet

  log-server:
    build: ./log-server
    ports:
      - "8090:8090"
    volumes:
      - ./bots:/bots:ro
    depends_on:
      - bot1
    networks:
      - botnet
    environment:
      - LOGS_ROOT=/bots

  log-ui:
    build:
      context: ./ui
      args:
        VITE_KNOWN_BOTS: ${KNOWN_BOTS}
    container_name: logs-ui
    restart: unless-stopped
    depends_on:
      - bot1
      - log-server
    environment:
      NODE_ENV: production
    ports:
      - "3000:3000"
    networks:
      - botnet

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./nginx/static:/usr/share/nginx/html:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./bots:/etc/nginx/bots:ro
      - ./logs:/var/log/nginx
    depends_on:
      - grafana
      - prometheus
    networks:
      - botnet

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - botnet

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    networks:
      - botnet

  # Node Exporter (для метрик самого сервера)
  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - botnet

networks:
  botnet:
    driver: bridge
